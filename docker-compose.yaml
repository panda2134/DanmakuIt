version: '3.9'
services:
  # TODO: reverse proxy
  controller:
    image: controller
    build:
      context: docker/build/controller
      dockerfile: Dockerfile
    entrypoint: ['bash', 'controller_entrypoint.sh']
    volumes:
      - ./private_key:/private_key
      - ./public_key:/public_key
      - ./token:/token
      - ./src/controller/app.py:/workspace/app.py
      - ./src/controller/keys_create.py:/workspace/keys_create.py
      - ./docker/entrypoint/controller_entrypoint.sh:/workspace/controller_entrypoint.sh
    networks:
      - intra
  
  pulsar:
    image: pulsar # with aiohttp for functions worker
    build:
      context: docker/build/pulsar
      dockerfile: Dockerfile
    entrypoint: ['bash', 'pulsar_entrypoint.sh']
    volumes:
      - ./public_key:/public_key
      - ./token:/token
      - pulsardata:/pulsar/data
      - pulsarconf:/pulsar/conf
      - ./conf/standalone.conf:/pulsar/conf/standalone.conf # real conf
      - ./conf/broker.conf:/pulsar/conf/broker.conf # only for further deployment
      - ./conf/client.conf:/pulsar/conf/client.conf
      - ./conf/functions_worker.yml:/pulsar/conf/functions_worker.yml
      - ./src/tagger/tagger.py:/pulsar/tagger.py
      - ./docker/entrypoint/pulsar_entrypoint.sh:/pulsar/pulsar_entrypoint.sh
      - ./docker/entrypoint/functions_create.sh:/pulsar/functions_create.sh
      - ./logs:/pulsar/logs
    networks:
      - intra
    depends_on:
      - controller

  nginx:
    image: nginx:alpine
    ports:
      - "9000:8000"
    volumes:
      - ./conf/nginx:/etc/nginx/conf.d
    depends_on:
      - controller
      - pulsar
    networks:
      - intra

volumes: 
  pulsardata: {}
  pulsarconf: {}
networks:
  intra:
    driver: bridge
